# Generated by Django 4.1 on 2022-08-31 12:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, verbose_name='Имя профиля')),
                ('ec', models.FloatField(default=0, verbose_name='Ec')),
                ('ppm', models.FloatField(default=0, verbose_name='PPM')),
                ('litres', models.FloatField(default=10)),
                ('calc_mode', models.CharField(choices=[('K', 'Калий сернокислый K2SO4 '), ('Mg', 'Магний азотнокислый Mg(NO3)2*6H2O')], default='K', max_length=2)),
                ('n', models.FloatField(default=0, verbose_name='N')),
                ('no3', models.FloatField(default=0, verbose_name='NO3')),
                ('nh4', models.FloatField(default=0, verbose_name='NH4')),
                ('p', models.FloatField(default=0, verbose_name='P')),
                ('k', models.FloatField(default=0, verbose_name='K')),
                ('ca', models.FloatField(default=0, verbose_name='Ca')),
                ('mg', models.FloatField(default=0, verbose_name='Mg')),
                ('s', models.FloatField(default=0, verbose_name='S')),
                ('cl', models.FloatField(default=0, verbose_name='Cl')),
                ('fe', models.FloatField(default=0, verbose_name='Fe')),
                ('mn', models.FloatField(default=0, verbose_name='Mn')),
                ('b', models.FloatField(default=0, verbose_name='B')),
                ('zn', models.FloatField(default=0, verbose_name='Zn')),
                ('cu', models.FloatField(default=0, verbose_name='Cu')),
                ('mo', models.FloatField(default=0, verbose_name='Mo')),
                ('co', models.FloatField(default=0, verbose_name='Co')),
                ('si', models.FloatField(default=0, verbose_name='Si')),
                ('dfe', models.FloatField(default=0, verbose_name='Fe')),
                ('dmn', models.FloatField(default=0, verbose_name='Mn')),
                ('db', models.FloatField(default=0, verbose_name='B')),
                ('dzn', models.FloatField(default=0, verbose_name='Zn')),
                ('dcu', models.FloatField(default=0, verbose_name='Cu')),
                ('dmo', models.FloatField(default=0, verbose_name='Mo')),
                ('dco', models.FloatField(default=0, verbose_name='Co')),
                ('dsi', models.FloatField(default=0, verbose_name='Si')),
                ('gfe', models.FloatField(default=0, verbose_name='Fe')),
                ('gmn', models.FloatField(default=0, verbose_name='Mn')),
                ('gb', models.FloatField(default=0, verbose_name='B')),
                ('gzn', models.FloatField(default=0, verbose_name='Zn')),
                ('gcu', models.FloatField(default=0, verbose_name='Cu')),
                ('gmo', models.FloatField(default=0, verbose_name='Mo')),
                ('gco', models.FloatField(default=0, verbose_name='Co')),
                ('gsi', models.FloatField(default=0, verbose_name='Si')),
                ('cano3_ca', models.FloatField(default=0, verbose_name='CaNO3_Ca')),
                ('cano3_no3', models.FloatField(default=0, verbose_name='CaNO3_NO3')),
                ('cano3_nh4', models.FloatField(default=0, verbose_name='CaNO3_NH4')),
                ('kno3_k', models.FloatField(default=0, verbose_name='KNO3_K')),
                ('kno3_no3', models.FloatField(default=0, verbose_name='KNO3_NO3')),
                ('nh4no3_nh4', models.FloatField(default=0, verbose_name='NH4NO3_NH4')),
                ('nh4no3_no3', models.FloatField(default=0, verbose_name='NH4NO3_NO3')),
                ('mgso4_mg', models.FloatField(default=0, verbose_name='MgSO4_Mg')),
                ('mgso4_s', models.FloatField(default=0, verbose_name='MgSO4_S')),
                ('kh2po4_k', models.FloatField(default=0, verbose_name='KH2PO4_K')),
                ('kh2po4_p', models.FloatField(default=0, verbose_name='KH2PO4_P')),
                ('k2so4_k', models.FloatField(default=0, verbose_name='K2SO4_K')),
                ('k2so4_s', models.FloatField(default=0, verbose_name='K2SO4_S')),
                ('mgno3_mg', models.FloatField(default=0, verbose_name='MgNO3_Mg')),
                ('mgno3_no3', models.FloatField(default=0, verbose_name='MgNO3_NO3')),
                ('cacl2_ca', models.FloatField(default=0, verbose_name='CaCl2_Ca')),
                ('cacl2_cl', models.FloatField(default=0, verbose_name='CaCl2_Cl')),
                ('nh4_nh3_ratio', models.FloatField(default=0.1, verbose_name='NH4:NH3')),
                ('micro_calc_mode', models.CharField(choices=[('u', 'Все микро соли'), ('b', 'Комплекс по бору')], default='u', max_length=2, verbose_name='Способ расчета')),
                ('v_micro', models.FloatField(default=500, verbose_name='Объем микро')),
                ('gl_cano3', models.FloatField(default=600)),
                ('gl_kno3', models.FloatField(default=250)),
                ('gl_nh4no3', models.FloatField(default=100)),
                ('gl_mgno3', models.FloatField(default=500)),
                ('gl_mgso4', models.FloatField(default=600)),
                ('gl_k2so4', models.FloatField(default=100)),
                ('gl_kh2po4', models.FloatField(default=150)),
                ('gl_cacl2', models.FloatField(default=100)),
                ('gl_cmplx', models.FloatField(default=10)),
                ('gl_fe', models.FloatField(default=10)),
                ('gl_mn', models.FloatField(default=10)),
                ('gl_b', models.FloatField(default=10)),
                ('gl_zn', models.FloatField(default=10)),
                ('gl_cu', models.FloatField(default=10)),
                ('gl_mo', models.FloatField(default=10)),
                ('gl_co', models.FloatField(default=10)),
                ('gl_si', models.FloatField(default=10)),
                ('gml_cano3', models.FloatField(default=1.2845)),
                ('gml_kno3', models.FloatField(default=1)),
                ('gml_nh4no3', models.FloatField(default=1)),
                ('gml_mgno3', models.FloatField(default=1)),
                ('gml_mgso4', models.FloatField(default=1)),
                ('gml_k2so4', models.FloatField(default=1)),
                ('gml_kh2po4', models.FloatField(default=1)),
                ('gml_cacl2', models.FloatField(default=1)),
                ('gml_cmplx', models.FloatField(default=1)),
                ('gml_fe', models.FloatField(default=1)),
                ('gml_mn', models.FloatField(default=1)),
                ('gml_b', models.FloatField(default=1)),
                ('gml_zn', models.FloatField(default=1)),
                ('gml_cu', models.FloatField(default=1)),
                ('gml_mo', models.FloatField(default=1)),
                ('gml_co', models.FloatField(default=1)),
                ('gml_si', models.FloatField(default=1)),
                ('taml', models.FloatField(default=1)),
                ('tbml', models.FloatField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='PlantTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, verbose_name='Имя профиля')),
                ('description', models.TextField(blank=True, null=True)),
                ('profile_owner', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Автор')),
            ],
            options={
                'ordering': ['name', 'profile_owner'],
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlantProfileHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('profile_data', models.JSONField(blank=True, default=dict, null=True)),
                ('changed_data', models.JSONField(blank=True, default=dict, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calc.plantprofile')),
            ],
            options={
                'ordering': ['pk', 'date'],
            },
        ),
        migrations.AddField(
            model_name='plantprofile',
            name='from_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_from_template', to='calc.planttemplate'),
        ),
        migrations.AddField(
            model_name='plantprofile',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='calc.planttemplate'),
        ),
        migrations.AddField(
            model_name='plantprofile',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
